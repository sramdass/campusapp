set http_proxy=http://www-proxy.us.oracle.com:80/

Checking out a particular commit to a new branch
----------------------------------------
git checkout -b aNewBranch SHA1

How to rollback to a particular commit
------------------------------
git reset --hard aeac611532356f08561a6ebfffe924ef62ba8dd--> commit_id

Populating seed data in test database
------------------------------
rake db:seed RAILS_ENV=test --trace

bundle show rspec-rails

bundle exec rspec spec/

how to load a sample code is on page http://ruby.railstutorial.org/chapters/rails-flavored-ruby#top
search of ./example

To concatenate all the students email from a Student table: recepients = Student.all.map(&:email).join(", ")

The types supported by Active Record are :primary_key, :string, :text, :integer, :float, :decimal, :datetime, :timestamp, :time, :date, :binary, :boolean

How to install a plugin: rails plugin install <git_path> --force


Mailit
******
name of the heroku project: http://radiant-journey-89.heroku.com
Git repository: git@heroku.com:radiant-journey-89.git


Student_app
***********

http://strong-planet-507.heroku.com/ | git@heroku.com:strong-planet-507.git
in git hub: git@github.com:sramdass/students_app.git


To push the application into heroku :http://devcenter.heroku.com/articles/quickstart

There was a public key error when running 'git push heroku master'.
For this run 'heroku keys:add C:\Users\sramdass.PSFT\.ssh\id_rsa.pub'  ->> refernce: http://stackoverflow.com/questions/1824759/git-push-heroku-master-permission-denied-on-vista (at the last)






After pushing the heroku, while running rake db:migrate there was a problem with the rake Gem.
(The rake gem 0.9.0 has some problems.
---------------------------------------------------
Solution: 1

Put this in your Rakefile above require 'rake':

require 'rake/dsl_definition'

ref: http://stackoverflow.com/questions/6181312/how-to-fix-the-uninitialized-constant-rakedsl-problem-on-heroku

----------------------------------------------------

Solution: 2

I installed gem install rake -v=0.9.2 (i had the 0.9.1 gem)
removed the 0.9.1 with gem uninstall rake -v=0.9.1
updated with bundle update
then the db:migrate showed a warning WARNING: Global access to Rake DSL methods is deprecated. Please....

It was solved by adding the following to the rake file:

module ::YourApplicationName  
  class Application
    include Rake::DSL
  end
end

ref: http://stackoverflow.com/questions/6085610/rails-rake-problems-uninitialized-constant-rakedsl

--------------------------------------------------------

Solution: 3

Combine #1 and #2.


***************************************************
controller -> Plural (Ex: Users)
model      -> Singular (Ex: User)



Section

name
teacher
strength

bundle exec annotate --position before -> annotation
<table_name>.delete_all --> deletes the entire contents of the table


rails generate controller Sections new

rails generate model Section name:string teacher:string strength:integer
bundle exec rake db:migrate  (for ROLLBACK -> bundle exec rake db:rollback)
bundle exec rake db:test:prepare  --> This just ensures that the data model from the development database, db/development.sqlite3, is reflected in the test database, db/test.sqlite3.

rails generate migration add_name_uniqueness  --> to make sure the name is unique for the sections
bundle exec rake db:migrate

rake db:migrate:down VERSION=20110731170010

***************************************************

rails new project_name
cd rails
change the gem file
bundle install
rails g model Teacher name:string roll_no:string gender:string email:string
rake db:migrate
bundle exec annotate --position before
rails g controller Teachers new create update destroy edit


rails g model Subject name:string

**************************************************

Misc:

1. If you put a custom function in application.rb or another controller and then try to access it from your view, you'll get the "No Method Error".The solution is to place the function as a helper function in the app/helpers/categories_helper.rb or app/helpers/application_helper.rb file. Or you can use a helper method

To call function from views, write the definition in app/helpers/
To call a function from multiple controllers, use application_controller.rb

-------------------------------------------------

<%= javascript_include_tag :defaults %>   ==> 

<%= javascript_include_tag "http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js", "jquery.rails.js", "application.js" %>  


The first file in the list is the latest version of jQuery from Google. This isn’t enough by itself though as we need a jQuery equivalent of the rails.js file we’ve been using before for handling the unobtrusive JavaScript that’s specific to Rails. 


----------------------------------------------------


JQUERY

   var element = $('<input />').attr ({ name: 'text1', value: 'textval', id: 'satheesh'});
   $("#holder").append(element);
   element = $('<b />').text("following is the text box");
   $("#holder").prepend(element);

   $('<div />'). attr('id', "newdiv").insertAfter($("#holder")).text("This is a master");
   $('#newdiv').css("color","red");

   $('div').css('background-color', 'blue');




  element =   $('<select id="ComboBox" > </select>');
  $("#holder").append(element);

  var myOptions = {
    val1 : 'text1',
    val2 : 'text2',
    val3 : 'text3'
  };


$.each(myOptions, function(val, text) {
    $('#ComboBox').append(
        $('<option></option>').val(val).html(text)
    );
});
  
----------------------------------------------------

RUBY COMMANDS:

controller -> Plural (Ex: Users)
model      -> Singular (Ex: User)



Section

name
teacher
strength

bundle exec annotate --position before -> annotation
<table_name>.delete_all --> deletes the entire contents of the table


rails generate controller Sections new

rails generate model Section name:string teacher:string strength:integer
bundle exec rake db:migrate  (for ROLLBACK -> bundle exec rake db:rollback)
bundle exec rake db:test:prepare  --> This just ensures that the data model from the development database, db/development.sqlite3, is reflected in the test database, db/test.sqlite3.

rails generate migration add_name_uniqueness_index  --> to make sure the name is unique for the sections
bundle exec rake db:migrate

------------------------------------------------------------

INSTALLING JQUERY ON RAILS
**************************

gem "jquery-rails"
bundle install
rails generate jquery:install
layouts/application.html.erb---> <%= javascript_include_tag :defaults %> (No google link is required  here)

BUGS
*****

1. Validation problems in secnew. When the validation fails, seccreate is trying to render 'secnew' and the @teachers instance variable is not available there.
2. All the *new(secnew, stunew) pages - When the validation fails, the page structure collapses.
3. Something has to be done about the gender drop down boxes


TODO
******

1. Complete the sign in and sign up
2. Complete the basic of roles
3. Add School, class, branch models.
4. Talk to a teacher and see how the migration happens.
5. Write a class and run email and sms as a background job.
6. Make the necessary checks in the accept_nested_attributes_for
7. Add the required validations in the dynamic model file
8. Bring in a school(branch) and a class model
9. Add a user profile table
10. Implement client side validations
11. Upgrade the project to rails 3.1
12.  If none of the checkboxes are selected in a form, it is possible that the entire field is not sent to the server. For this, send a hidden field. Refer episode #189 mins 10-11 (Refer new.html.erb)
  


rails g model UserProfile email:string login_attempts:integer account_locked:boolean


			logger.debug "This is the log message!!!"
			#	logger.debug_variables(binding)

